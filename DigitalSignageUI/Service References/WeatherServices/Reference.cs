//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalSignageUI.WeatherServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherServices.Iweather")]
    public interface Iweather {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iweather/getWeatherInfo", ReplyAction="http://tempuri.org/Iweather/getWeatherInfoResponse")]
        void getWeatherInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Iweather/getWeatherInfo", ReplyAction="http://tempuri.org/Iweather/getWeatherInfoResponse")]
        System.Threading.Tasks.Task getWeatherInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IweatherChannel : DigitalSignageUI.WeatherServices.Iweather, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IweatherClient : System.ServiceModel.ClientBase<DigitalSignageUI.WeatherServices.Iweather>, DigitalSignageUI.WeatherServices.Iweather {
        
        public IweatherClient() {
        }
        
        public IweatherClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IweatherClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IweatherClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IweatherClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void getWeatherInfo() {
            base.Channel.getWeatherInfo();
        }
        
        public System.Threading.Tasks.Task getWeatherInfoAsync() {
            return base.Channel.getWeatherInfoAsync();
        }
    }
}
